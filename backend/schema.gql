type CreateNoteResult {
  note: Note!
}

scalar DateTime

type Mutation {
  createNote(authorId: Int!, content: String, title: String!): CreateNoteResult!
  createUser(email: String!, uid: String!): User!
}

type Note {
  author: User!
  content: String
  id: ID!
  title: String
}

type Profile {
  bio: String
  id: ID!
  user: User!
  userId: ID!
}

type Query {
  note(id: String!): Note
  notes(skip: Int, take: Int): [Note!]!
  profile(id: String!): Profile
  user(id: String!): User
}

type User {
  email: String!
  id: ID!
  name: String
  notes: [Note!]!
  notesCount: Int!
  profile: Profile
}